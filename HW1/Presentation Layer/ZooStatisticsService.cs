using HW1.Domain_Layer;

public class ZooStatisticsService
{
    private readonly Zoo _zoo;

    public ZooStatisticsService(Zoo zoo)
    {
        _zoo = zoo;
    }

            public void PrintStatistics()
        {
            Console.WriteLine("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–æ–æ–ø–∞—Ä–∫–∞:");
            Console.WriteLine($"- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö: {_zoo.GetTotalAnimals()}");
            Console.WriteLine($"- –°—É–º–º–∞—Ä–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –µ–¥—ã –≤ –¥–µ–Ω—å: {_zoo.GetTotalFoodConsumption()} –∫–≥");

            var contactZooAnimals = _zoo.ContactZoo.ToList();
            Console.WriteLine($"- –ñ–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ: {contactZooAnimals.Count}");
            if (_zoo.GetTotalAnimals() > 0)
            {
                Console.WriteLine("  üêæ –°–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∑–æ–æ–ø–∞—Ä–∫–µ:");
                foreach (var animal in _zoo.Animals)
                {
                    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–∏–ø–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Monkey, Rabit, Tiger –∏ —Ç.–¥.)
                    string animalType = animal.GetType().Name;
                    Console.WriteLine($"    - [{animalType}] {animal._name} (‚Ññ{animal.Number}, –µ—Å—Ç {animal.Food} –∫–≥/–¥–µ–Ω—å)");
                }
            }
            if (contactZooAnimals.Count > 0)
            {
                Console.WriteLine("  üêæ –°–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ:");
                foreach (var animal in contactZooAnimals)
                {
                    string animalType = animal.GetType().Name;
                    Console.WriteLine($"    - [{animalType}] {animal._name} (‚Ññ{animal.Number}, –µ—Å—Ç {animal.Food} –∫–≥/–¥–µ–Ω—å)");
                }
            }

            var inventoryItems = _zoo.Things.ToList();
            Console.WriteLine($"- –í—Å–µ–≥–æ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: {inventoryItems.Count}");
            if (inventoryItems.Count > 0)
            {
                Console.WriteLine("  üõ†Ô∏è –°–ø–∏—Å–æ–∫ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:");
                foreach (var thing in _zoo.Things)
                {
                    string thingType = thing.GetType().Name;
                    Console.WriteLine($"- [{thingType}] {thing._thingName} (#{thing.Number})");
                }
            }
            Console.ReadLine();
        }

        public void PrintContactStatistics()
        {
            Console.WriteLine("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞:");
            var contactAnimals = _zoo.ContactZoo.ToList();
            Console.WriteLine($"- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ: {contactAnimals.Count}");

            if (contactAnimals.Count > 0)
            {
                Console.WriteLine("  üêæ –°–ø–∏—Å–æ–∫ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ:");
                foreach (var animal in contactAnimals)
                {
                    string animalType = animal.GetType().Name;
                    Console.WriteLine(
                        $"    - [{animalType}] {animal._name} (‚Ññ{animal.Number}, –µ—Å—Ç {animal.Food} –∫–≥/–¥–µ–Ω—å, " +
                        $"{(animal._isHealthy ? "–ó–¥–æ—Ä–æ–≤" : "–ë–æ–ª–µ–Ω")})");
                }
            }
            else
            {
                Console.WriteLine("–ñ–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–º –∑–æ–æ–ø–∞—Ä–∫–µ –Ω–µ—Ç!");
            }

            Console.ReadLine();
        }
}